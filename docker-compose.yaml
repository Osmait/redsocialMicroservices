x-logging: &default-logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/api/prom/push"
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'
services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
  rabbitmq-notification:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  auth-service:
    image: cosmtrek/air
    working_dir: /app
    ports:
      - 8001:8001
    volumes:
      - ./AuthService:/app

  # Api GateWay
  api-gateway:
    image: cosmtrek/air
    working_dir: /app
    ports:
      - 5000:5000
    environment:
      - USER_HOST=user-service
      - USER_PORT=8080
      - POST_HOST=post-service
      - POST_PORT=3000
      - COMMENT_HOST=comment-service
      - COMMENT_PORT=8000
      - FOLLOWER_HOST=follower-service
      - FOLLOWER_PORT=3001
    volumes:
      - ./apiGateway:/app

    # logging: *default-logging
  # UserService
  postgres-user:
    image: postgres:13
    environment:
      - POSTGRES_DB=my_store
      - POSTGRES_USER=osmait
      - POSTGRES_PASSWORD=admin123
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  user-service:
    image: openjdk:17-jdk
    working_dir: /app
    environment:
      - DB_PORT=5432
      - DB_DATABASE=my_store
      - DB_USER=osmait
      - DB_PASSWORD=admin123
      - DB_HOSTNAME=postgres-user
    ports:
      - 8080:8080
    depends_on:
      - postgres-user
    volumes:
      - ./userService/userService:/app
    command: bash -c ./gradlew bootRun
    restart: always

  post-service:
    image: node:18
    working_dir: /app
    environment:
      - DB_PORT=5432
      - DB_DATABASE=my_store
      - DB_USER=osmait
      - DB_PASSWORD=admin123
      - DB_HOSTNAME=postgres-user
      - USER_URL=comment-service
    ports:
      - 3000:3000
    volumes:
      - ./PostServices/post-service:/app
    command: bash -c "npm run start:dev"

    restart: always
  # CommentService

  comment-service:
    build:
      context: CommentServices/
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    restart: always
  # Notification Service

  notification-service:
    image: cosmtrek/air
    working_dir: /app
    environment:
      - HOST_RABBIT=rabbitmq-notification
    ports:
      - 8083:8083
    depends_on:
      - rabbitmq-notification
    restart: always
    volumes:
      - ./notificationService:/app

  # Follower Service
  follower-service:
    image: node:18
    working_dir: /app
    environment:
      - DB_PORT=5432
      - DB_DATABASE=my_store
      - DB_USER=osmait
      - DB_PASSWORD=admin123
      - DB_HOSTNAME=postgres-user
      - USER_URL="http//user-service:8080"
    ports:
      - 3001:3001
    volumes:
      - ./followersService/follower-service:/app
    command: bash -c "npm run start:dev"

    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3002:3000"
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://osmait:admin123@postgres-user:5432/my_store?sslmode=disable"
    links:
      - postgres-user
      - prometheus

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:v1.0.0-RC9
    environment:
      RABBIT_URL: "http://rabbitmq-notification:15672"

    links:
      - rabbitmq-notification
      - prometheus
volumes:
  grafana_data:
